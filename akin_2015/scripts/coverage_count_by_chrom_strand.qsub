#!/bin/bash
#PBS -M jrbnewman@ufl.edu
#PBS -m n
#PBS -r n
#PBS -q bio
#PBS -j oe
#PBS -o /scratch/lfs/sugrue/scripts/PBS_LOGS/cc_by_chrom_strand
#PBS -l walltime=16:00:00
#PBS -l nodes=1:ppn=1
#PBS -l pmem=12gb
#PBS -t 1-64

module load python

    PROJ=/scratch/lfs/sugrue

    #Pull info from design file
    DESIGN_FILE=$PROJ/design_files/sugrue_file_list.csv
    DESIGN=$(sed -n "${PBS_ARRAYID}p" $DESIGN_FILE)
    IFS=',' read -ra ARRAY <<<"$DESIGN"


     C=${ARRAY[0]}
     NUM=${ARRAY[1]}
     SAMP=${ARRAY[2]}
     LANE=${ARRAY[3]}
     READ=${ARRAY[4]}
     BIN=${ARRAY[5]}

     NAME=${C}-${NUM}_${SAMP}_${LANE}_${READ}_${BIN}

    

#### Make Output Directory
        OUTPUT=$PROJ/coverage_fusions_sd
        if [ ! -e $OUTPUT ]; then mkdir -p $OUTPUT; fi

        ## Sanity check - check if plus aln to minus fusions and vis versa
        #SANITY=$PROJ/coverage_fusions_sd_sanity
        #if [ ! -e $SANITY ]; then mkdir -p $SANITY; fi


    # Create LOG directory and start log
        LOGS=$OUTPUT/logs 
        if [ ! -e $LOGS ]; then mkdir -p $LOGS; fi
        MYLOG=$LOGS/${NAME}.log
        printf "`date` $NAME PBS_ID:$PBS_ARRAYID HOSTNAME:$HOSTNAME \n\n" > "${MYLOG}"



#### COVERAGE COUNTS
    BED1=$PROJ/references/hg19_aceview_fusions_sd.plus
    BED2=$PROJ/references/hg19_aceview_fusions_sd.minus
    SAM1=$PROJ/bwa_mem_aln_strand/${NAME}_fwd
    SAM2=$PROJ/bwa_mem_aln_strand/${NAME}_rev
    MPILEUP1=$PROJ/mpileup_distinct_strand/${NAME}_fwd.mpileup
    MPILEUP2=$PROJ/mpileup_distinct_strand/${NAME}_rev.mpileup



## List of chromosomes including X and Y.
CHROM=$PROJ/design_files/chrom_list.txt
#CHROM=$PROJ/design_files/chrom_list_chr.txt

## testing
#FILEDUMP=$PROJ/dump_files

COUNT=0
for chrom in $(cat $CHROM)
do
    awk -v chr="$chrom" '{if ($3 == chr) print $0}' $SAM1.sam > $TMPDIR/${NAME}_fwd_${chrom}.sam
    awk -v chr="$chrom" '{if ($3 == chr) print $0}' $SAM2.sam > $TMPDIR/${NAME}_rev_${chrom}.sam
    awk -v chr="$chrom" '{if ($1 == chr) print $0}' $BED1.bed > $TMPDIR/hg19_fusions_for_${chrom}.bed
    awk -v chr="$chrom" '{if ($1 == chr) print $0}' $BED2.bed > $TMPDIR/hg19_fusions_rev_${chrom}.bed

    echo "Starting Coverage Counts for $NAME (plus strand) `date`" > "${MYLOG}"
    python /scratch/lfs/sugrue/scripts/rpkm_calculate2.py \
        -b $TMPDIR/hg19_fusions_for_${chrom}.bed \
        -m $MPILEUP1 \
        -s $TMPDIR/${NAME}_fwd_${chrom}.sam \
        -n ${NAME} \
        --cv \
        -g "${MYLOG}" \
        -o $TMPDIR/${NAME}_${chrom}_for_for.csv
    echo "Finished Coverage Counts for $NAME `date`" >> "${MYLOG}"

     if [ $COUNT == 0 ]
     then
         cat $TMPDIR/${NAME}_${chrom}_for_for.csv > $OUTPUT/${NAME}_plus_sd.csv
     else
         tail -n+2 $TMPDIR/${NAME}_${chrom}_for_for.csv >> $OUTPUT/${NAME}_plus_sd.csv
     fi


    echo "Starting Coverage Counts for $NAME (minus strand) `date`" > "${MYLOG}"
    python /scratch/lfs/sugrue/scripts/rpkm_calculate2.py \
        -b $TMPDIR/hg19_fusions_rev_${chrom}.bed \
        -m $MPILEUP2 \
        -s $TMPDIR/${NAME}_rev_${chrom}.sam \
        -n ${NAME} \
        --cv \
        -g "${MYLOG}" \
        -o $TMPDIR/${NAME}_${chrom}_rev_rev.csv
    echo "Finished Coverage Counts for $NAME `date`" >> "${MYLOG}"


     if [ $COUNT == 0 ]
     then
         cat $TMPDIR/${NAME}_${chrom}_rev_rev.csv > $OUTPUT/${NAME}_minus_sd.csv
         COUNT=1
     else
         tail -n+2 $TMPDIR/${NAME}_${chrom}_rev_rev.csv >> $OUTPUT/${NAME}_minus_sd.csv
     fi


#    echo "Starting Coverage Counts for $NAME (plus strand - minus aln) `date`" > "${MYLOG}"
#    python /scratch/lfs/sugrue/scripts/rpkm_calculate2.py \
#        -b $TMPDIR/hg19_fusions_for_${chrom}.bed \
#        -m $MPILEUP2 \
#        -s $TMPDIR/${NAME}_rev_${chrom}.sam \
#        -n ${NAME} \
#        --cv \
#        -g "${MYLOG}" \
#        -o $TMPDIR/${NAME}_${chrom}_rev_for.csv
#    echo "Finished Coverage Counts for $NAME `date`" >> "${MYLOG}"

#     if [ $COUNT == 0 ]
#     then

#         cat $TMPDIR/${NAME}_${chrom}_rev_for.csv > $SANITY/${NAME}_plus_sd_minus_aln.csv
#     else
#         tail -n+2 $TMPDIR/${NAME}_${chrom}_rev_for.csv >> $SANITY/${NAME}_plus_sd_minus_aln.csv
#     fi
#
#
#    echo "Starting Coverage Counts for $NAME (minus strand - plus aln) `date`" > "${MYLOG}"
#    python /scratch/lfs/sugrue/scripts/rpkm_calculate2.py \
#        -b $TMPDIR/hg19_fusions_rev_${chrom}.bed \
#        -m $MPILEUP1 \
#        -s $TMPDIR/${NAME}_fwd_${chrom}.sam \
#        -n ${NAME} \
#        --cv \
#        -g "${MYLOG}" \
#        -o $TMPDIR/${NAME}_${chrom}_for_rev.csv
#    echo "Finished Coverage Counts for $NAME `date`" >> "${MYLOG}"
#

#     if [ $COUNT == 0 ]
#     then
#         cat $TMPDIR/${NAME}_${chrom}_for_rev.csv > $SANITY/${NAME}_minus_sd_plus_aln.csv
#         COUNT=1
#     else
#         tail -n+2 $TMPDIR/${NAME}_${chrom}_for_rev.csv >> $SANITY/${NAME}_minus_sd_plus_aln.csv
#     fi

echo "Script complete [`date`]" >> "${MYLOG}"

done


