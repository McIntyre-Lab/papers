#!/bin/bash
#PBS -M jfear@ufl.edu
#PBS -m n
#PBS -q bio
#PBS -r n
#PBS -j oe
#PBS -o /bio/mcintyre/cegs/scripts/PBS_LOGS/coverage_count_fb551_transcriptome/
#PBS -l walltime=11:00:00
#PBS -l nodes=1:ppn=1
#PBS -l pmem=10gb
#PBS -t 1-342%50
#342

module load python
USER=jfear

PROJ=/bio/mcintyre/cegs

#### Because I am using an PBS Array I am pulling LINE:MV:REP:LANE from an
#    external CSV with all possible combinations (5590 lines)
    DESIGN_FILE=$PROJ/design_files/CEGS_57_lines_no_tech.txt
    DESIGN=$(sed -n "${PBS_ARRAYID}p" $DESIGN_FILE)

    IFS=',' read -ra ARRAY <<< "$DESIGN"

    LINE=${ARRAY[0]}
    MV=${ARRAY[1]}
    REP=${ARRAY[2]}

#### Make Output Directory
    # Create OUTPUT directory if needed.
        OUTPUT=$PROJ/coverage_count_fb551_transcriptome
        if [ ! -e $OUTPUT ]; then mkdir -p $OUTPUT; fi

    # Create LOG directory and start log
        LOGS=$OUTPUT/logs 
        if [ ! -e $LOGS ]; then mkdir -p $LOGS; fi
        MYLOG=$LOGS/${LINE}_${MV}${REP}.log
        printf "`date` $LINE $MV $REP PBS_ID:$PBS_ARRAYID HOSTNAME:$HOSTNAME \n\n" > $MYLOG

    # Select TMPDIR
        # Create a temporary folder to do everything in. If you comment this section
        # out, script will use node's local TMPDIR
        SIZE=`df /local/scratch/ | grep -v "Filesystem" | awk '{print $4}'`
        FLAG_SCRATCH=0
        #SIZE=1

        if [ $SIZE -lt 20000000 ]
        then 
            echo "TMPDIR full, moving to SCRATCH" >> $MYLOG
            TMPDIR=/scratch/hpc/$USER/tmp/coverage_count_fb551_transcriptome_$PBS_ARRAYID
            if [ ! -d $TMPDIR ]; then mkdir -p $TMPDIR; fi
            FLAG_SCRATCH=1
        fi

#### COVERAGE COUNTS
    BED=$TMPDIR/dmel-all-transcript-r5.51.bed
    cp /bio/mcintyre/references/dmel_fb551/dmel-all-transcript-r5.51.bed $BED

    SAM=$TMPDIR/${LINE}_${MV}${REP}.sam
    cp $PROJ/aln_fb551_transcriptome/${LINE}_${MV}${REP}.sam $SAM

    MPILEUP=$TMPDIR/${LINE}_${MV}${REP}.mpileup
    cp $PROJ/mpileup_fb551_transcriptome/${LINE}_${MV}${REP}.mpileup $MPILEUP

    echo "Starting Coverage Counts for $LINE $MV $REP `date`" > $MYLOG
    python $PROJ/scripts/rpkm_calculate.py \
        -b $BED \
        -m $MPILEUP \
        -s $SAM \
        -g $MYLOG \
        -o $TMPDIR/${LINE}_${MV}${REP}.csv
    echo "Finished Coverage Counts for $LINE $MV $REP `date`" >> $MYLOG

    cp $TMPDIR/${LINE}_${MV}${REP}.csv $OUTPUT/${LINE}_${MV}${REP}.csv

echo "Script complete [`date`]" >> $MYLOG
