#!/bin/bash
#PBS -M jfear@ufl.edu
#PBS -N aln2mask
#PBS -r n
#PBS -q bio
#PBS -o /scratch/lfs/mcintyre/cegs_ase_paper/scripts/PBS_LOGS/ase_pipeline/
#PBS -e /scratch/lfs/mcintyre/cegs_ase_paper/scripts/PBS_LOGS/ase_pipeline/
#PBS -l walltime=20:00:00
#PBS -l nodes=1:ppn=6
#PBS -l pmem=3gb
##PBS -t 1-417
#PBS -t 51,388

# Set BASH options
set -o nounset
set -e

module load bowtie/1.1.1 
module load last/247
module load python/2.7.6
module load samtools/1.2

# Store number of processors used -- i.e. number of files to split into to run LAST
NUMPROCS=$PBS_NUM_PPN

# Set Directories
PROJ=/scratch/lfs/mcintyre/cegs_ase_paper
INDIR=$PROJ/fastq_split

# Set Design info
DESIGN_FILE=$PROJ/design_files/CEGS_68_lines_no_tech.txt
DESIGN=$(sed -n "${PBS_ARRAYID}p" $DESIGN_FILE)
IFS=',' read -ra ARRAY <<< "$DESIGN"

LINE=${ARRAY[0]}
MV=${ARRAY[1]}
REP=${ARRAY[2]}
FULLNAME=${LINE}_${MV}${REP}

# Set Different References
REF=$PROJ/references/masked_genome/${LINE}/w1118_2_${LINE}_masked_genome_BT1
LASTREF=$PROJ/references/masked_genome/${LINE}/w1118_2_${LINE}_masked_genome_LAST
FAREF=$PROJ/references/masked_genome/${LINE}/w1118_2_${LINE}_masked_genome.fasta

# Create output directories and logs
OUTDIR=$PROJ/ase_pipeline_output/aln_masked_genome
if [ ! -e $OUTDIR ]; then mkdir -p $OUTDIR; fi

LOGS=$OUTDIR/logs
if [ ! -e $LOGS ]; then mkdir -p $LOGS; fi

MYLOG=$LOGS/${FULLNAME}_masked.log
printf "`date` $LINE $MV $REP SGE_ID:$PBS_ARRAYID HOSTNAME:$HOSTNAME \n\n" > $MYLOG

ALN_ERROR_LOG=$LOGS/${FULLNAME}_aln_error.log

ALNLOGS=$OUTDIR/aln_logs 
if [ ! -e $ALNLOGS ]; then mkdir -p $ALNLOGS; fi

# Start Alignment Pipeline
## FUNCTIONS FOR ALIGNMENT PIPELINE ###
source $PROJ/scripts/alignment_functions.sh

## Start Alignment Pipeline
cd $TMPDIR
printf "<------------------- STARTING SE alignment process for $FULLNAME [`date`] ------------------->\n" >> $MYLOG

# I am aligning all tech reps separately, because they were run on different
# technologies with different quality scores. Yay CEGS
DESIGN_FILE2=$PROJ/design_files/CEGS_combined_lines_design.txt
for T in $(grep "$LINE,${MV}${REP}" $DESIGN_FILE2)
do
    IFS=',' read -ra ARRAY <<< "$T"
    TECH=${ARRAY[2]}
    NAME=${FULLNAME}.${TECH}

    READS=$TMPDIR/${NAME}_distinct.fq
    cat $INDIR/${NAME}*_distinct.fq > $READS 2>/dev/null || continue

    qual=`python /scratch/lfs/mcintyre/python.git/identify_quality.py -i $READS`
    if [ $qual == 'phred64' ];
    then
        # set to old illumina quality scores phred64/solexa 1.3
        btqual='--phred64-quals'
        lastqual='3'
    else
        # change to sanger format which is what all new illumina data is
        btqual='--phred33-quals'
        lastqual='1'
    fi

    bowtie_se_all
    last_se_all

    # Clean up fqs
    rm *.fq
done

## Combine all Sam files
        echo "START Combine SAM files">>$MYLOG
        cat *.sam >$TMPDIR/${FULLNAME}.sam 2>/dev/null || ( echo "No Alignment Files, [`date`]" >>$MYLOG; exit 1 )
        echo "FINISH Combining SAM files [`date`]" >>$MYLOG

## Convert to BAM files
        echo "START Convert SAM to BAM">>$MYLOG
        samtools view -ut $FAREF.fai $TMPDIR/$FULLNAME.sam | samtools sort -T $TMPDIR/aln.sorted -m 2G -@ $NUMPROCS -o $TMPDIR/$FULLNAME.sorted.bam -
        samtools index $TMPDIR/$FULLNAME.sorted.bam 
        echo "FINISH converting SAM to BAM">>$MYLOG
        cp $FULLNAME.sorted.* $OUTDIR/

        echo "Script Complete, [`date`]" >>$MYLOG
