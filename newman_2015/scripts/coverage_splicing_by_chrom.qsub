#!/bin/bash
#PBS -M jrbnewman@ufl.edu
#PBS -m n
#PBS -W group_list=concannon
#PBS -r n
#PBS -j oe
#PBS -o /scratch/lfs/patcon/jnewman/scripts/PBS_LOGS/coverage_counts
#PBS -l walltime=4:00:00
#PBS -l nodes=1:ppn=1
#PBS -l pmem=12gb
#PBS -t 1-1000

module load python

    PROJ=/scratch/lfs/patcon/jnewman
    #Pull info from design file
    #DESIGN_FILE=$PROJ/diabetes_rep1_design_2.csv
    DESIGN_FILE=$PROJ/new_design_file.csv
    #DESIGN_FILE=$PROJ/last_repeats.csv
    DESIGN=$(sed -n "${PBS_ARRAYID}p" $DESIGN_FILE)
    IFS=',' read -ra ARRAY <<<"$DESIGN"


    FLOWCELL=${ARRAY[0]}
    LANE=${ARRAY[1]}
    REP=${ARRAY[2]}
    INDEX1=${ARRAY[3]}
    INDEX2=${ARRAY[4]}
    LIBRARY=${ARRAY[5]}
    NAME=${FLOWCELL}_${LANE}_1_${INDEX1}_${INDEX2}_${LIBRARY}

    
#### Make Output Directory
    # Create OUTPUT directory if needed.

        OUTPUT=$PROJ/coverage_splicing
        #OUTPUT=$PROJ/coverage_count_genes
        #OUTPUT=$PROJ/coverage_count_exons
        #OUTPUT=$PROJ/coverage_count_introns
        #OUTPUT=$PROJ/coverage_count_junctions
        #OUTPUT=$PROJ/coverage_count_ret_introns

        if [ ! -e $OUTPUT ]; then mkdir -p $OUTPUT; fi

    # Create LOG directory and start log
        LOGS=$OUTPUT/logs 
        if [ ! -e $LOGS ]; then mkdir -p $LOGS; fi
        MYLOG=$LOGS/${NAME}.log
        printf "`date` $NAME PBS_ID:$PBS_ARRAYID HOSTNAME:$HOSTNAME \n\n" > "${MYLOG}"

#### COVERAGE COUNTS
    BED=$PROJ/references/hg19_splicing_catalogue.bed
#    BED=$PROJ/references/hg19_aceview_genes
#    BED=$PROJ/references/hg19_aceview_exons
#    BED=$PROJ/references/hg19_aceview_introns
#    BED=$PROJ/references/hg19_aceview_junctions_74bp
#    BED=$PROJ/references/hg19_aceview_retained_introns
    SAM=$PROJ/aln_splicing/${NAME}.sam
    MPILEUP=$PROJ/mpileup_splicing/${NAME}.mpileup


    echo "Starting Coverage Counts for $NAME `date`" >> "${MYLOG}"
    python /scratch/lfs/patcon/jnewman/scripts/rpkm_calculate.py \
        -b $BED \
        -m $MPILEUP \
        -s $SAM \
        -n ${NAME} \
        --cv \
        -g "${MYLOG}" \
        -o $OUTPUT/${NAME}.csv
    echo "Finished Coverage Counts for $NAME `date`" >> "${MYLOG}"

