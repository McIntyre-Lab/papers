#!/bin/bash
#PBS -M jfear@ufl.edu
#PBS -N alnupd
#PBS -r n
#PBS -q bio
#PBS -o /scratch/lfs/mcintyre/cegs_ase_paper/scripts/PBS_LOGS/ase_pipeline/
#PBS -e /scratch/lfs/mcintyre/cegs_ase_paper/scripts/PBS_LOGS/ase_pipeline/
#PBS -l walltime=20:00:00
#PBS -l nodes=1:ppn=2
#PBS -l pmem=10gb
##PBS -t 1-417
#PBS -t 51

# Set BASH options
set -o nounset
set -e

module load bowtie/1.1.1 
module load last/247
module load python/2.7.6
module load samtools/1.2

# Store number of processors used -- i.e. number of files to split into to run LAST
NUMPROCS=$PBS_NUM_PPN

# Set Directories
PROJ=/scratch/lfs/mcintyre/cegs_ase_paper
INDIR=$PROJ/fastq_split

# Set Design info
DESIGN_FILE=$PROJ/design_files/CEGS_68_lines_no_tech.txt
DESIGN=$(sed -n "${PBS_ARRAYID}p" $DESIGN_FILE)
IFS=',' read -ra ARRAY <<< "$DESIGN"

LINE=${ARRAY[0]}
MV=${ARRAY[1]}
REP=${ARRAY[2]}
FULLNAME=${LINE}_${MV}${REP}

# Set References directory
REFDIR=$PROJ/references/upd_genome/$LINE

# Create output directories and logs
OUTDIR=$PROJ/ase_pipeline_output/aln_upd_fusions
if [ ! -e $OUTDIR ]; then mkdir -p $OUTDIR; fi

LOGS=$OUTDIR/logs
if [ ! -e $LOGS ]; then mkdir -p $LOGS; fi

MYLOG=$LOGS/${FULLNAME}_upd_fusions.log
printf "`date` $LINE $MV $REP SGE_ID:$PBS_ARRAYID HOSTNAME:$HOSTNAME \n\n" > $MYLOG

ALN_ERROR_LOG=$LOGS/${FULLNAME}_aln_error.log

ALNLOGS=$OUTDIR/aln_logs 
if [ ! -e $ALNLOGS ]; then mkdir -p $ALNLOGS; fi

# Start Alignment Pipeline
## FUNCTIONS FOR ALIGNMENT PIPELINE ###
source $PROJ/scripts/alignment_functions.sh

cd $TMPDIR
for RUN in line tester
do
    if [[ $RUN == 'line' ]]
    then
        REF=$REFDIR/${LINE}_w11182${LINE}_UPD_fusions_BT1
        LASTREF=$REFDIR/${LINE}_w11182${LINE}_UPD_fusions_LAST
        FAREF=$REFDIR/${LINE}_w11182${LINE}_UPD_fusions.fa

    elif [[ $RUN == 'tester' ]]
    then
        REF=$REFDIR/w1118_w11182${LINE}_UPD_fusions_BT1
        LASTREF=$REFDIR/w1118_w11182${LINE}_UPD_fusions_LAST
        FAREF=$REFDIR/w1118_w11182${LINE}_UPD_fusions.fa
    fi

    # I am aligning all tech reps separately, because they were run on different
    # technologies with different quality scores. Yay CEGS
    DESIGN_FILE2=$PROJ/design_files/CEGS_combined_lines_design.txt
    for T in $(grep "$LINE,${MV}${REP}" $DESIGN_FILE2)
    do
        IFS=',' read -ra ARRAY <<< "$T"
        TECH=${ARRAY[2]}
        NAME=${FULLNAME}.${TECH}

        READS=$TMPDIR/${NAME}_distinct.fq
        cat $INDIR/${NAME}*_distinct.fq > $READS 2>/dev/null || continue

        qual=`python /scratch/lfs/mcintyre/python.git/identify_quality.py -i $READS`
        if [ $qual == 'phred64' ];
        then
            # set to old illumina quality scores phred64/solexa 1.3
            btqual='--phred64-quals'
            lastqual='3'
        else
            # change to sanger format which is what all new illumina data is
            btqual='--phred33-quals'
            lastqual='1'
        fi

        bowtie_se_uniq
        last_se_uniq
        # Clean up fqs
        rm *.fq
    done

    ## Combine all Sam files
    echo "START Combine SAM files">>$MYLOG
    cat *.sam >$TMPDIR/${FULLNAME}.sam 2>/dev/null || ( echo "No Alignment Files, [`date`]" >>$MYLOG; exit 1 )
    echo "FINISH Combining SAM files [`date`]" >>$MYLOG

    ## Save copy to SCRATCH
    if [ $RUN == 'line' ]
    then
        ONAME=$OUTDIR/${FULLNAME}_${LINE}_upd_fusions.sam
    elif [ $RUN == 'tester' ]
    then
        ONAME=$OUTDIR/${FULLNAME}_w1118_upd_fusions.sam
    fi

    cp $FULLNAME.sam $ONAME

    cd $TMPDIR 
    rm *
done
echo "Script Complete, [`date`]" >>$MYLOG
